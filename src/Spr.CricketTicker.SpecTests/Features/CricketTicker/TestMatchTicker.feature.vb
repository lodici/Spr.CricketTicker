'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by SpecFlow (http://www.specflow.org/).
'     SpecFlow Version:1.9.0.77
'     SpecFlow Generator Version:1.9.0.0
'     Runtime Version:4.0.30319.296
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------
#Region "Designer generated code"
'#pragma warning disable
Imports TechTalk.SpecFlow

Namespace Spr.CricketTicker.SpecTests.Features.CricketTicker
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77"),  _
     System.Runtime.CompilerServices.CompilerGeneratedAttribute(),  _
     NUnit.Framework.TestFixtureAttribute(),  _
     NUnit.Framework.DescriptionAttribute("TestMatchTicker"),  _
     NUnit.Framework.CategoryAttribute("TestMatch")>  _
    Partial Public Class TestMatchTickerFeature
        
        Private Shared testRunner As TechTalk.SpecFlow.ITestRunner
        
#ExternalSource("TestMatchTicker.feature",1)
#End ExternalSource
        
        <NUnit.Framework.TestFixtureSetUpAttribute()>  _
        Public Overridable Sub FeatureSetup()
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner
            Dim featureInfo As TechTalk.SpecFlow.FeatureInfo = New TechTalk.SpecFlow.FeatureInfo(New System.Globalization.CultureInfo("en-US"), "TestMatchTicker", "", ProgrammingLanguage.VB, New String() {"TestMatch"})
            testRunner.OnFeatureStart(featureInfo)
        End Sub
        
        <NUnit.Framework.TestFixtureTearDownAttribute()>  _
        Public Overridable Sub FeatureTearDown()
            testRunner.OnFeatureEnd
            testRunner = Nothing
        End Sub
        
        <NUnit.Framework.SetUpAttribute()>  _
        Public Overridable Sub TestInitialize()
        End Sub
        
        <NUnit.Framework.TearDownAttribute()>  _
        Public Overridable Sub ScenarioTearDown()
            testRunner.OnScenarioEnd
        End Sub
        
        Public Overridable Sub ScenarioSetup(ByVal scenarioInfo As TechTalk.SpecFlow.ScenarioInfo)
            testRunner.OnScenarioStart(scenarioInfo)
        End Sub
        
        Public Overridable Sub ScenarioCleanup()
            testRunner.CollectScenarioErrors
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Display score using Oz format")>  _
        Public Overridable Sub DisplayScoreUsingOzFormat()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Display score using Oz format", CType(Nothing,String()))
#ExternalSource("TestMatchTicker.feature",4)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",5)
 testRunner.Given("a live Test match", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
            Dim table1 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Id", "Abbreviation"})
            table1.AddRow(New String() {"1", "ENG"})
            table1.AddRow(New String() {"2", "SA"})
#ExternalSource("TestMatchTicker.feature",6)
 testRunner.And("the teams are", CType(Nothing,String), table1, "And ")
#End ExternalSource
            Dim table2 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"InningsNumber", "BattingTeamId", "RunsScored", "WicketsTaken"})
            table2.AddRow(New String() {"1", "2", "309", "10"})
            table2.AddRow(New String() {"2", "1", "208", "5"})
#ExternalSource("TestMatchTicker.feature",10)
 testRunner.And("the innings scores are", CType(Nothing,String), table2, "And ")
#End ExternalSource
            Dim table3 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"CurrentInnings", "Day", "Status", "ResultCode"})
            table3.AddRow(New String() {"2", "2", "In Progress", "None"})
#ExternalSource("TestMatchTicker.feature",14)
 testRunner.And("the match status is", CType(Nothing,String), table3, "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",17)
 testRunner.And("the score should be displayed using the Oz format", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",18)
 testRunner.When("the cricket ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",19)
 testRunner.Then("the ticker should display ""ENG:5/208 SA:309 D:2 In Progress""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Match yet to begin")>  _
        Public Overridable Sub MatchYetToBegin()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Match yet to begin", CType(Nothing,String()))
#ExternalSource("TestMatchTicker.feature",21)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",22)
 testRunner.Given("a live Test match", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
            Dim table4 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Id", "Abbreviation"})
            table4.AddRow(New String() {"1", "ENG"})
            table4.AddRow(New String() {"2", "SA"})
#ExternalSource("TestMatchTicker.feature",23)
 testRunner.And("the teams are", CType(Nothing,String), table4, "And ")
#End ExternalSource
            Dim table5 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"InningsNumber", "BattingTeamId", "RunsScored", "WicketsTaken"})
            table5.AddRow(New String() {"1", "2", "0", "0"})
#ExternalSource("TestMatchTicker.feature",27)
 testRunner.And("the innings scores are", CType(Nothing,String), table5, "And ")
#End ExternalSource
            Dim table6 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"CurrentInnings", "Day", "Status", "ResultCode"})
            table6.AddRow(New String() {"1", "1", "Match yet to begin", "None"})
#ExternalSource("TestMatchTicker.feature",30)
 testRunner.And("the match status is", CType(Nothing,String), table6, "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",33)
 testRunner.When("the cricket ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",34)
 testRunner.Then("the ticker should display ""ENG:0 SA:0/0 Match yet to begin""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Day one match in progress")>  _
        Public Overridable Sub DayOneMatchInProgress()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Day one match in progress", CType(Nothing,String()))
#ExternalSource("TestMatchTicker.feature",36)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",37)
 testRunner.Given("a live Test match", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
            Dim table7 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Id", "Abbreviation"})
            table7.AddRow(New String() {"1", "ENG"})
            table7.AddRow(New String() {"2", "SA"})
#ExternalSource("TestMatchTicker.feature",38)
 testRunner.And("the teams are", CType(Nothing,String), table7, "And ")
#End ExternalSource
            Dim table8 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"InningsNumber", "BattingTeamId", "RunsScored", "WicketsTaken"})
            table8.AddRow(New String() {"1", "2", "132", "3"})
#ExternalSource("TestMatchTicker.feature",42)
 testRunner.And("the innings scores are", CType(Nothing,String), table8, "And ")
#End ExternalSource
            Dim table9 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"CurrentInnings", "Day", "Status", "ResultCode"})
            table9.AddRow(New String() {"1", "1", "In Progress", "None"})
#ExternalSource("TestMatchTicker.feature",45)
 testRunner.And("the match status is", CType(Nothing,String), table9, "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",48)
 testRunner.When("the cricket ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",49)
 testRunner.Then("the ticker should display ""ENG:0 SA:132/3 D:1 In Progress""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Day two innings break")>  _
        Public Overridable Sub DayTwoInningsBreak()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Day two innings break", CType(Nothing,String()))
#ExternalSource("TestMatchTicker.feature",51)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",52)
 testRunner.Given("a live Test match", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
            Dim table10 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Id", "Abbreviation"})
            table10.AddRow(New String() {"1", "ENG"})
            table10.AddRow(New String() {"2", "SA"})
#ExternalSource("TestMatchTicker.feature",53)
 testRunner.And("the teams are", CType(Nothing,String), table10, "And ")
#End ExternalSource
            Dim table11 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"InningsNumber", "BattingTeamId", "RunsScored", "WicketsTaken"})
            table11.AddRow(New String() {"1", "2", "309", "10"})
#ExternalSource("TestMatchTicker.feature",57)
 testRunner.And("the innings scores are", CType(Nothing,String), table11, "And ")
#End ExternalSource
            Dim table12 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"CurrentInnings", "Day", "Status", "ResultCode"})
            table12.AddRow(New String() {"1", "2", "Innings Break", "None"})
#ExternalSource("TestMatchTicker.feature",60)
 testRunner.And("the match status is", CType(Nothing,String), table12, "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",63)
 testRunner.When("the cricket ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",64)
 testRunner.Then("the ticker should display ""ENG:0 SA:309 D:2 Innings Break""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Day two seconds innings start")>  _
        Public Overridable Sub DayTwoSecondsInningsStart()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Day two seconds innings start", CType(Nothing,String()))
#ExternalSource("TestMatchTicker.feature",66)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",67)
 testRunner.Given("a live Test match", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
            Dim table13 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Id", "Abbreviation"})
            table13.AddRow(New String() {"1", "ENG"})
            table13.AddRow(New String() {"2", "SA"})
#ExternalSource("TestMatchTicker.feature",68)
 testRunner.And("the teams are", CType(Nothing,String), table13, "And ")
#End ExternalSource
            Dim table14 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"InningsNumber", "BattingTeamId", "RunsScored", "WicketsTaken"})
            table14.AddRow(New String() {"1", "2", "309", "10"})
            table14.AddRow(New String() {"2", "1", "0", "0"})
#ExternalSource("TestMatchTicker.feature",72)
 testRunner.And("the innings scores are", CType(Nothing,String), table14, "And ")
#End ExternalSource
            Dim table15 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"CurrentInnings", "Day", "Status", "ResultCode"})
            table15.AddRow(New String() {"2", "2", "In Progress", "None"})
#ExternalSource("TestMatchTicker.feature",76)
 testRunner.And("the match status is", CType(Nothing,String), table15, "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",79)
 testRunner.When("the cricket ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",80)
 testRunner.Then("the ticker should display ""ENG:0/0 SA:309 D:2 In Progress""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Day two seconds innings in progress")>  _
        Public Overridable Sub DayTwoSecondsInningsInProgress()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Day two seconds innings in progress", CType(Nothing,String()))
#ExternalSource("TestMatchTicker.feature",82)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",83)
 testRunner.Given("a live Test match", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
            Dim table16 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Id", "Abbreviation"})
            table16.AddRow(New String() {"1", "ENG"})
            table16.AddRow(New String() {"2", "SA"})
#ExternalSource("TestMatchTicker.feature",84)
 testRunner.And("the teams are", CType(Nothing,String), table16, "And ")
#End ExternalSource
            Dim table17 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"InningsNumber", "BattingTeamId", "RunsScored", "WicketsTaken"})
            table17.AddRow(New String() {"1", "2", "309", "10"})
            table17.AddRow(New String() {"2", "1", "208", "5"})
#ExternalSource("TestMatchTicker.feature",88)
 testRunner.And("the innings scores are", CType(Nothing,String), table17, "And ")
#End ExternalSource
            Dim table18 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"CurrentInnings", "Day", "Status", "ResultCode"})
            table18.AddRow(New String() {"2", "2", "In Progress", "None"})
#ExternalSource("TestMatchTicker.feature",92)
 testRunner.And("the match status is", CType(Nothing,String), table18, "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",95)
 testRunner.When("the cricket ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",96)
 testRunner.Then("the ticker should display ""ENG:208/5 SA:309 D:2 In Progress""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Day two seconds innings stumps")>  _
        Public Overridable Sub DayTwoSecondsInningsStumps()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Day two seconds innings stumps", CType(Nothing,String()))
#ExternalSource("TestMatchTicker.feature",98)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",99)
 testRunner.Given("a live Test match", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
            Dim table19 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Id", "Abbreviation"})
            table19.AddRow(New String() {"1", "ENG"})
            table19.AddRow(New String() {"2", "SA"})
#ExternalSource("TestMatchTicker.feature",100)
 testRunner.And("the teams are", CType(Nothing,String), table19, "And ")
#End ExternalSource
            Dim table20 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"InningsNumber", "BattingTeamId", "RunsScored", "WicketsTaken"})
            table20.AddRow(New String() {"1", "2", "309", "10"})
            table20.AddRow(New String() {"2", "1", "312", "8"})
#ExternalSource("TestMatchTicker.feature",104)
 testRunner.And("the innings scores are", CType(Nothing,String), table20, "And ")
#End ExternalSource
            Dim table21 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"CurrentInnings", "Day", "Status", "ResultCode"})
            table21.AddRow(New String() {"2", "2", "Stumps", "None"})
#ExternalSource("TestMatchTicker.feature",108)
 testRunner.And("the match status is", CType(Nothing,String), table21, "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",111)
 testRunner.When("the cricket ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",112)
 testRunner.Then("the ticker should display ""ENG:312/8 SA:309 D:2 Stumps""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Day three seconds innings innings break")>  _
        Public Overridable Sub DayThreeSecondsInningsInningsBreak()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Day three seconds innings innings break", CType(Nothing,String()))
#ExternalSource("TestMatchTicker.feature",114)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",115)
 testRunner.Given("a live Test match", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
            Dim table22 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Id", "Abbreviation"})
            table22.AddRow(New String() {"1", "ENG"})
            table22.AddRow(New String() {"2", "SA"})
#ExternalSource("TestMatchTicker.feature",116)
  testRunner.And("the teams are", CType(Nothing,String), table22, "And ")
#End ExternalSource
            Dim table23 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"InningsNumber", "BattingTeamId", "RunsScored", "WicketsTaken"})
            table23.AddRow(New String() {"1", "2", "309", "10"})
            table23.AddRow(New String() {"2", "1", "346", "10"})
#ExternalSource("TestMatchTicker.feature",120)
 testRunner.And("the innings scores are", CType(Nothing,String), table23, "And ")
#End ExternalSource
            Dim table24 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"CurrentInnings", "Day", "Status", "ResultCode"})
            table24.AddRow(New String() {"2", "3", "Innings Break", "None"})
#ExternalSource("TestMatchTicker.feature",124)
 testRunner.And("the match status is", CType(Nothing,String), table24, "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",127)
 testRunner.When("the cricket ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",128)
 testRunner.Then("the ticker should display ""ENG:346 SA:309 D:3 Innings Break""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Day three third innings start")>  _
        Public Overridable Sub DayThreeThirdInningsStart()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Day three third innings start", CType(Nothing,String()))
#ExternalSource("TestMatchTicker.feature",130)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",131)
 testRunner.Given("a live Test match", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
            Dim table25 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Id", "Abbreviation"})
            table25.AddRow(New String() {"1", "ENG"})
            table25.AddRow(New String() {"2", "SA"})
#ExternalSource("TestMatchTicker.feature",132)
 testRunner.And("the teams are", CType(Nothing,String), table25, "And ")
#End ExternalSource
            Dim table26 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"InningsNumber", "BattingTeamId", "RunsScored", "WicketsTaken"})
            table26.AddRow(New String() {"1", "2", "309", "10"})
            table26.AddRow(New String() {"2", "1", "346", "10"})
            table26.AddRow(New String() {"3", "2", "0", "0"})
#ExternalSource("TestMatchTicker.feature",136)
 testRunner.And("the innings scores are", CType(Nothing,String), table26, "And ")
#End ExternalSource
            Dim table27 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"CurrentInnings", "Day", "Status", "ResultCode"})
            table27.AddRow(New String() {"3", "3", "In Progress", "None"})
#ExternalSource("TestMatchTicker.feature",141)
 testRunner.And("the match status is", CType(Nothing,String), table27, "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",144)
 testRunner.When("the cricket ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",145)
 testRunner.Then("the ticker should display ""ENG:346 SA:309+0/0 D:3 In Progress""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Day three third innings in progress")>  _
        Public Overridable Sub DayThreeThirdInningsInProgress()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Day three third innings in progress", CType(Nothing,String()))
#ExternalSource("TestMatchTicker.feature",147)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",148)
 testRunner.Given("a live Test match", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
            Dim table28 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Id", "Abbreviation"})
            table28.AddRow(New String() {"1", "ENG"})
            table28.AddRow(New String() {"2", "SA"})
#ExternalSource("TestMatchTicker.feature",149)
 testRunner.And("the teams are", CType(Nothing,String), table28, "And ")
#End ExternalSource
            Dim table29 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"InningsNumber", "BattingTeamId", "RunsScored", "WicketsTaken"})
            table29.AddRow(New String() {"1", "2", "309", "10"})
            table29.AddRow(New String() {"2", "1", "346", "10"})
            table29.AddRow(New String() {"3", "2", "54", "0"})
#ExternalSource("TestMatchTicker.feature",153)
 testRunner.And("the innings scores are", CType(Nothing,String), table29, "And ")
#End ExternalSource
            Dim table30 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"CurrentInnings", "Day", "Status", "ResultCode"})
            table30.AddRow(New String() {"3", "3", "In Progress", "None"})
#ExternalSource("TestMatchTicker.feature",158)
 testRunner.And("the match status is", CType(Nothing,String), table30, "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",161)
 testRunner.When("the cricket ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",162)
 testRunner.Then("the ticker should display ""ENG:346 SA:309+54/0 D:3 In Progress""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Day three third innings innings break")>  _
        Public Overridable Sub DayThreeThirdInningsInningsBreak()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Day three third innings innings break", CType(Nothing,String()))
#ExternalSource("TestMatchTicker.feature",164)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",165)
 testRunner.Given("a live Test match", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
            Dim table31 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Id", "Abbreviation"})
            table31.AddRow(New String() {"1", "ENG"})
            table31.AddRow(New String() {"2", "SA"})
#ExternalSource("TestMatchTicker.feature",166)
 testRunner.And("the teams are", CType(Nothing,String), table31, "And ")
#End ExternalSource
            Dim table32 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"InningsNumber", "BattingTeamId", "RunsScored", "WicketsTaken"})
            table32.AddRow(New String() {"1", "2", "309", "10"})
            table32.AddRow(New String() {"2", "1", "346", "10"})
            table32.AddRow(New String() {"3", "2", "157", "10"})
#ExternalSource("TestMatchTicker.feature",170)
 testRunner.And("the innings scores are", CType(Nothing,String), table32, "And ")
#End ExternalSource
            Dim table33 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"CurrentInnings", "Day", "Status", "ResultCode"})
            table33.AddRow(New String() {"3", "3", "Innings Break", "None"})
#ExternalSource("TestMatchTicker.feature",175)
 testRunner.And("the match status is", CType(Nothing,String), table33, "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",178)
 testRunner.When("the cricket ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",179)
 testRunner.Then("the ticker should display ""ENG:346 SA:309+157 D:3 Innings Break""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Day three fourth innings start")>  _
        Public Overridable Sub DayThreeFourthInningsStart()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Day three fourth innings start", CType(Nothing,String()))
#ExternalSource("TestMatchTicker.feature",181)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",182)
 testRunner.Given("a live Test match", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
            Dim table34 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Id", "Abbreviation"})
            table34.AddRow(New String() {"1", "ENG"})
            table34.AddRow(New String() {"2", "SA"})
#ExternalSource("TestMatchTicker.feature",183)
 testRunner.And("the teams are", CType(Nothing,String), table34, "And ")
#End ExternalSource
            Dim table35 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"InningsNumber", "BattingTeamId", "RunsScored", "WicketsTaken"})
            table35.AddRow(New String() {"1", "2", "309", "10"})
            table35.AddRow(New String() {"2", "1", "346", "10"})
            table35.AddRow(New String() {"3", "2", "157", "10"})
            table35.AddRow(New String() {"4", "1", "0", "0"})
#ExternalSource("TestMatchTicker.feature",187)
 testRunner.And("the innings scores are", CType(Nothing,String), table35, "And ")
#End ExternalSource
            Dim table36 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"CurrentInnings", "Day", "Status", "ResultCode"})
            table36.AddRow(New String() {"4", "3", "In Progress", "None"})
#ExternalSource("TestMatchTicker.feature",193)
 testRunner.And("the match status is", CType(Nothing,String), table36, "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",196)
 testRunner.When("the cricket ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",197)
 testRunner.Then("the ticker should display ""ENG:346+0/0 SA:309+157 D:3 In Progress""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Day three fourth innings stumps")>  _
        Public Overridable Sub DayThreeFourthInningsStumps()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Day three fourth innings stumps", CType(Nothing,String()))
#ExternalSource("TestMatchTicker.feature",199)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",200)
 testRunner.Given("a live Test match", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
            Dim table37 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Id", "Abbreviation"})
            table37.AddRow(New String() {"1", "ENG"})
            table37.AddRow(New String() {"2", "SA"})
#ExternalSource("TestMatchTicker.feature",201)
 testRunner.And("the teams are", CType(Nothing,String), table37, "And ")
#End ExternalSource
            Dim table38 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"InningsNumber", "BattingTeamId", "RunsScored", "WicketsTaken"})
            table38.AddRow(New String() {"1", "2", "309", "10"})
            table38.AddRow(New String() {"2", "1", "346", "10"})
            table38.AddRow(New String() {"3", "2", "157", "10"})
            table38.AddRow(New String() {"4", "1", "100", "4"})
#ExternalSource("TestMatchTicker.feature",205)
 testRunner.And("the innings scores are", CType(Nothing,String), table38, "And ")
#End ExternalSource
            Dim table39 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"CurrentInnings", "Day", "Status", "ResultCode"})
            table39.AddRow(New String() {"4", "3", "Stumps", "None"})
#ExternalSource("TestMatchTicker.feature",211)
 testRunner.And("the match status is", CType(Nothing,String), table39, "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",214)
 testRunner.When("the cricket ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",215)
 testRunner.Then("the ticker should display ""ENG:346+100/4 SA:309+157 D:3 Stumps""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Day four fourth innings match finished")>  _
        Public Overridable Sub DayFourFourthInningsMatchFinished()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Day four fourth innings match finished", CType(Nothing,String()))
#ExternalSource("TestMatchTicker.feature",217)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",218)
 testRunner.Given("a live Test match", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
            Dim table40 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Id", "Abbreviation"})
            table40.AddRow(New String() {"1", "ENG"})
            table40.AddRow(New String() {"2", "SA"})
#ExternalSource("TestMatchTicker.feature",219)
 testRunner.And("the teams are", CType(Nothing,String), table40, "And ")
#End ExternalSource
            Dim table41 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"InningsNumber", "BattingTeamId", "RunsScored", "WicketsTaken"})
            table41.AddRow(New String() {"1", "2", "309", "10"})
            table41.AddRow(New String() {"2", "1", "346", "10"})
            table41.AddRow(New String() {"3", "2", "157", "10"})
            table41.AddRow(New String() {"4", "1", "121", "5"})
#ExternalSource("TestMatchTicker.feature",223)
 testRunner.And("the innings scores are", CType(Nothing,String), table41, "And ")
#End ExternalSource
            Dim table42 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"CurrentInnings", "Day", "Status", "ResultCode"})
            table42.AddRow(New String() {"4", "4", "Match Ended", "Result"})
#ExternalSource("TestMatchTicker.feature",229)
 testRunner.And("the match status is", CType(Nothing,String), table42, "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",232)
 testRunner.And("the winning team Id is 1", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",233)
 testRunner.When("the cricket ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",234)
 testRunner.Then("the ticker should display ""ENG:346+121[W] SA:309+157 D:4 Match Ended""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Team asked to follow on")>  _
        Public Overridable Sub TeamAskedToFollowOn()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Team asked to follow on", CType(Nothing,String()))
#ExternalSource("TestMatchTicker.feature",236)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",237)
 testRunner.Given("a live Test match", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
            Dim table43 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Id", "Abbreviation"})
            table43.AddRow(New String() {"1", "NZ"})
            table43.AddRow(New String() {"2", "SA"})
#ExternalSource("TestMatchTicker.feature",238)
 testRunner.And("the teams are", CType(Nothing,String), table43, "And ")
#End ExternalSource
            Dim table44 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"InningsNumber", "BattingTeamId", "RunsScored", "WicketsTaken"})
            table44.AddRow(New String() {"1", "2", "525", "10"})
            table44.AddRow(New String() {"2", "1", "121", "10"})
            table44.AddRow(New String() {"3", "1", "157", "4"})
#ExternalSource("TestMatchTicker.feature",242)
 testRunner.And("the innings scores are", CType(Nothing,String), table44, "And ")
#End ExternalSource
            Dim table45 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"CurrentInnings", "Day", "Status", "ResultCode"})
            table45.AddRow(New String() {"3", "3", "Stumps", "None"})
#ExternalSource("TestMatchTicker.feature",247)
 testRunner.And("the match status is", CType(Nothing,String), table45, "And ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",250)
 testRunner.When("the cricket ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("TestMatchTicker.feature",251)
 testRunner.Then("the ticker should display ""NZ:121+157/4 SA:525 D:3 Stumps""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
    End Class
End Namespace
'#pragma warning restore
#End Region
