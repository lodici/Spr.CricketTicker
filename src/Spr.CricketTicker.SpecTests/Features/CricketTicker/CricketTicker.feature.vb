'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by SpecFlow (http://www.specflow.org/).
'     SpecFlow Version:1.9.0.77
'     SpecFlow Generator Version:1.9.0.0
'     Runtime Version:4.0.30319.269
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------
#Region "Designer generated code"
'#pragma warning disable
Imports TechTalk.SpecFlow

Namespace Spr.CricketTicker.SpecTests.Features.CricketTicker
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77"),  _
     System.Runtime.CompilerServices.CompilerGeneratedAttribute(),  _
     NUnit.Framework.TestFixtureAttribute(),  _
     NUnit.Framework.DescriptionAttribute("Cricket Ticker")>  _
    Partial Public Class CricketTickerFeature
        
        Private Shared testRunner As TechTalk.SpecFlow.ITestRunner
        
#ExternalSource("CricketTicker.feature",1)
#End ExternalSource
        
        <NUnit.Framework.TestFixtureSetUpAttribute()>  _
        Public Overridable Sub FeatureSetup()
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner
            Dim featureInfo As TechTalk.SpecFlow.FeatureInfo = New TechTalk.SpecFlow.FeatureInfo(New System.Globalization.CultureInfo("en-US"), "Cricket Ticker", "In order to keep up-to-date on the cricket"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"As a cricket fan"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"I want to see the c"& _ 
                    "urrent score", ProgrammingLanguage.VB, CType(Nothing,String()))
            testRunner.OnFeatureStart(featureInfo)
        End Sub
        
        <NUnit.Framework.TestFixtureTearDownAttribute()>  _
        Public Overridable Sub FeatureTearDown()
            testRunner.OnFeatureEnd
            testRunner = Nothing
        End Sub
        
        <NUnit.Framework.SetUpAttribute()>  _
        Public Overridable Sub TestInitialize()
        End Sub
        
        <NUnit.Framework.TearDownAttribute()>  _
        Public Overridable Sub ScenarioTearDown()
            testRunner.OnScenarioEnd
        End Sub
        
        Public Overridable Sub ScenarioSetup(ByVal scenarioInfo As TechTalk.SpecFlow.ScenarioInfo)
            testRunner.OnScenarioStart(scenarioInfo)
        End Sub
        
        Public Overridable Sub ScenarioCleanup()
            testRunner.CollectScenarioErrors
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Tooltip when missing Sub Series value")>  _
        Public Overridable Sub TooltipWhenMissingSubSeriesValue()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Tooltip when missing Sub Series value", CType(Nothing,String()))
#ExternalSource("CricketTicker.feature",6)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("CricketTicker.feature",7)
 testRunner.Given("the sample feed ""MissingSubSeries""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",8)
 testRunner.And("the game I want to monitor has an Id equal to ""184575""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "And ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",9)
 testRunner.When("the ticker is updated the first time", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",10)
 testRunner.Then("the tooltip should be set to", "ICC World Twenty20 Warm-up Matches"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"2012"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Match 11"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"R.Premadasa Stadium, Colomb"& _ 
                    "o, Sri Lanka.", CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Tooltip for Test Match")>  _
        Public Overridable Sub TooltipForTestMatch()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Tooltip for Test Match", CType(Nothing,String()))
#ExternalSource("CricketTicker.feature",19)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("CricketTicker.feature",20)
 testRunner.Given("the sample feed ""OneOdiOneTest""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",21)
 testRunner.And("the game I want to monitor has an Id equal to ""108608""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "And ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",22)
 testRunner.When("the ticker is updated the first time", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",23)
 testRunner.Then("the tooltip should be set to", "New Zealand in India Test Series"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"2 Test Cricket Series, 2012"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"1st Test"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Rajiv "& _ 
                    "Gandhi International Stadium, Hyderabad, India.", CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Tooltip for ODI")>  _
        Public Overridable Sub TooltipForODI()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Tooltip for ODI", CType(Nothing,String()))
#ExternalSource("CricketTicker.feature",32)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("CricketTicker.feature",33)
 testRunner.Given("the sample feed ""OneOdiMatchEnded""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",34)
 testRunner.And("the game I want to monitor has an Id equal to ""104905""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "And ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",35)
 testRunner.When("the ticker is updated the first time", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",36)
 testRunner.Then("the tooltip should be set to", "South Africa in England ODI Series"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"5 ODI Cricket Series, 2012"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"5th ODI"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Trent "& _ 
                    "Bridge, Nottingham, England.", CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("ODI display format in first innings")>  _
        Public Overridable Sub ODIDisplayFormatInFirstInnings()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("ODI display format in first innings", CType(Nothing,String()))
#ExternalSource("CricketTicker.feature",45)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("CricketTicker.feature",46)
 testRunner.Given("the sample feed ""OneOdiFirstInnings""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",47)
 testRunner.And("the game I want to monitor has an Id equal to ""184303""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "And ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",48)
 testRunner.When("the ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",49)
 testRunner.Then("display ""PAK:0 AUS:47/0 OV:6.4 RR:7.05""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("ODI display format in first innings and rain stoppage")>  _
        Public Overridable Sub ODIDisplayFormatInFirstInningsAndRainStoppage()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("ODI display format in first innings and rain stoppage", CType(Nothing,String()))
#ExternalSource("CricketTicker.feature",51)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("CricketTicker.feature",52)
 testRunner.Given("the sample feed ""OneOdiOneTest""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",53)
 testRunner.And("the game I want to monitor has an Id equal to ""104901""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "And ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",54)
 testRunner.When("the ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",55)
 testRunner.Then("display ""SA:0 ENG:0/0 Rain Stoppage""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("ODI display format in second innings and drinks break")>  _
        Public Overridable Sub ODIDisplayFormatInSecondInningsAndDrinksBreak()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("ODI display format in second innings and drinks break", CType(Nothing,String()))
#ExternalSource("CricketTicker.feature",57)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("CricketTicker.feature",58)
 testRunner.Given("the sample feed ""TwoOdi""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",59)
 testRunner.And("the game I want to monitor has an Id equal to ""104902""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "And ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",60)
 testRunner.When("the ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",61)
 testRunner.Then("display ""SA:287 ENG:152/5 Drinks""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("ODI display format in second innings and play in progress")>  _
        Public Overridable Sub ODIDisplayFormatInSecondInningsAndPlayInProgress()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("ODI display format in second innings and play in progress", CType(Nothing,String()))
#ExternalSource("CricketTicker.feature",63)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("CricketTicker.feature",64)
 testRunner.Given("the sample feed ""TwoOdi""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",65)
 testRunner.And("the game I want to monitor has an Id equal to ""184298""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "And ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",66)
 testRunner.When("the ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",67)
 testRunner.Then("display ""PAK:198 AUS:21/1 OV:5.0 RR:4.20/3.95""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Test Match display format")>  _
        Public Overridable Sub TestMatchDisplayFormat()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Test Match display format", CType(Nothing,String()))
#ExternalSource("CricketTicker.feature",69)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("CricketTicker.feature",70)
 testRunner.Given("the sample feed ""OneTestSecondInningsStumps""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",71)
 testRunner.And("the game I want to monitor has an Id equal to ""104900""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "And ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",72)
 testRunner.When("the ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",73)
 testRunner.Then("display ""ENG: 208/5 (Stumps)""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Feed throws runtime exception")>  _
        Public Overridable Sub FeedThrowsRuntimeException()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Feed throws runtime exception", CType(Nothing,String()))
#ExternalSource("CricketTicker.feature",75)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("CricketTicker.feature",76)
 testRunner.Given("an exception occurs when retrieving feed results", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",77)
 testRunner.When("the ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",78)
 testRunner.Then("display ""Unexpected Error! Restart Required.""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("No live game")>  _
        Public Overridable Sub NoLiveGame()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("No live game", CType(Nothing,String()))
#ExternalSource("CricketTicker.feature",81)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("CricketTicker.feature",82)
 testRunner.Given("the sample feed ""NoGames""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",83)
 testRunner.When("the ticker is updated", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("CricketTicker.feature",84)
 testRunner.Then("display ""Game Data Not Available""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
    End Class
End Namespace
'#pragma warning restore
#End Region
