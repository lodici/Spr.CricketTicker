'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by SpecFlow (http://www.specflow.org/).
'     SpecFlow Version:1.9.0.77
'     SpecFlow Generator Version:1.9.0.0
'     Runtime Version:4.0.30319.296
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------
#Region "Designer generated code"
'#pragma warning disable
Imports TechTalk.SpecFlow

Namespace Spr.CricketTicker.SpecTests.Features.CricketTicker
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77"),  _
     System.Runtime.CompilerServices.CompilerGeneratedAttribute(),  _
     NUnit.Framework.TestFixtureAttribute(),  _
     NUnit.Framework.DescriptionAttribute("CricketMatchProperties")>  _
    Partial Public Class CricketMatchPropertiesFeature
        
        Private Shared testRunner As TechTalk.SpecFlow.ITestRunner
        
#ExternalSource("CricketMatchProperties.feature",1)
#End ExternalSource
        
        <NUnit.Framework.TestFixtureSetUpAttribute()>  _
        Public Overridable Sub FeatureSetup()
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner
            Dim featureInfo As TechTalk.SpecFlow.FeatureInfo = New TechTalk.SpecFlow.FeatureInfo(New System.Globalization.CultureInfo("en-US"), "CricketMatchProperties", "", ProgrammingLanguage.VB, CType(Nothing,String()))
            testRunner.OnFeatureStart(featureInfo)
        End Sub
        
        <NUnit.Framework.TestFixtureTearDownAttribute()>  _
        Public Overridable Sub FeatureTearDown()
            testRunner.OnFeatureEnd
            testRunner = Nothing
        End Sub
        
        <NUnit.Framework.SetUpAttribute()>  _
        Public Overridable Sub TestInitialize()
        End Sub
        
        <NUnit.Framework.TearDownAttribute()>  _
        Public Overridable Sub ScenarioTearDown()
            testRunner.OnScenarioEnd
        End Sub
        
        Public Overridable Sub ScenarioSetup(ByVal scenarioInfo As TechTalk.SpecFlow.ScenarioInfo)
            testRunner.OnScenarioStart(scenarioInfo)
        End Sub
        
        Public Overridable Sub ScenarioCleanup()
            testRunner.CollectScenarioErrors
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Series Name with three caption format")>  _
        Public Overridable Sub SeriesNameWithThreeCaptionFormat()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Series Name with three caption format", CType(Nothing,String()))
#ExternalSource("CricketMatchProperties.feature",3)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("CricketMatchProperties.feature",4)
 testRunner.Given("the series name xml element is ""South Africa in England ODI Series, 5 ODI Cricket"& _ 
                    " Series, 2012""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("CricketMatchProperties.feature",5)
 testRunner.When("the series name is parsed", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("CricketMatchProperties.feature",6)
 testRunner.Then("the resulting string should be ""5 ODI Cricket Series""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Series Name with two caption format")>  _
        Public Overridable Sub SeriesNameWithTwoCaptionFormat()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Series Name with two caption format", CType(Nothing,String()))
#ExternalSource("CricketMatchProperties.feature",8)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("CricketMatchProperties.feature",9)
 testRunner.Given("the series name xml element is ""ICC Womens World Cup, 2013""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("CricketMatchProperties.feature",10)
 testRunner.When("the series name is parsed", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("CricketMatchProperties.feature",11)
 testRunner.Then("the resulting string should be ""ICC Womens World Cup""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <NUnit.Framework.TestAttribute(),  _
         NUnit.Framework.DescriptionAttribute("Series Name with redundant padding")>  _
        Public Overridable Sub SeriesNameWithRedundantPadding()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Series Name with redundant padding", CType(Nothing,String()))
#ExternalSource("CricketMatchProperties.feature",13)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("CricketMatchProperties.feature",14)
 testRunner.Given("the series name xml element is ""Australia vs Pakistan ODI Series, 3 ODI Cricket S"& _ 
                    "eries in United Arab Emirates                                                   "& _ 
                    "                             , 2012""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Given ")
#End ExternalSource
#ExternalSource("CricketMatchProperties.feature",15)
 testRunner.When("the series name is parsed", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "When ")
#End ExternalSource
#ExternalSource("CricketMatchProperties.feature",16)
 testRunner.Then("the resulting string should be ""3 ODI Cricket Series in United Arab Emirates""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Then ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
    End Class
End Namespace
'#pragma warning restore
#End Region
